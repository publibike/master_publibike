{"version":3,"sources":["./src/app/register/register-routing.module.ts","./src/app/register/register.page.html","./src/app/register/register.page.ts","./src/app/register/register.page.scss","./src/app/register/register.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;AChBtC;AAAe,q+BAAs6B,sBAAsB,0jBAA0jB,sBAAsB,qkBAAqkB,sBAAsB,2jBAA2jB,sBAAsB,0iBAA0iB,sBAAsB,6lBAA6lB,sBAAsB,yvBAAyvB,sBAAsB,8jBAA8jB,sBAAsB,uiBAAuiB,sBAAsB,0iCAA0iC,sBAAsB,wlEAAwlE,sBAAsB,ujBAAujB,sBAAsB,2DAA2D,gBAAgB,6MAA6M,E;;;;;;;;;;;;;;;;;;;;;;;;ACA3vT;AAC+B;AAClC;AACwB;IAO1D,YAAY,SAAZ,YAAY;IAwDvB,YACU,WAAwB,EACxB,WAAgC,EAChC,OAAsB;QAFtB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAqB;QAChC,YAAO,GAAP,OAAO,CAAe;QAzDhC,wBAAmB,GAAG;YACpB,MAAM,EAAE;gBACN,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,yBAAyB,EAAE;gBACxD;oBACE,IAAI,EAAE,WAAW;oBACjB,OAAO,EAAE,0CAA0C;iBACpD;aACF;YACD,QAAQ,EAAE;gBACR,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,2BAA2B,EAAE;gBAC1D;oBACE,IAAI,EAAE,WAAW;oBACjB,OAAO,EAAE,4CAA4C;iBACtD;aACF;YACD,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,0CAA0C,EAAE;aAC1E;YACD,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,gCAAgC,EAAE;aAChE;YACD,KAAK,EAAE;gBACL,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,uBAAuB,EAAE;gBACtD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,0BAA0B,EAAE;aACzD;YACD,QAAQ,EAAE;gBACR,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,+BAA+B,EAAE;gBAC9D;oBACE,IAAI,EAAE,WAAW;oBACjB,OAAO,EAAE,iDAAiD;iBAC3D;aACF;YACD,MAAM,EAAE;gBACN,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,gCAAgC,EAAE;aAChE;YACD,QAAQ,EAAE;gBACR,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,0BAA0B,EAAE;aAC1D;YACD,IAAI,EAAE;gBACJ,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,sBAAsB,EAAE;aACtD;YACD,QAAQ,EAAE;gBACR,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,iCAAiC,EAAE;aACjE;YACD,KAAK,EAAE;gBACL,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,uBAAuB,EAAE;aACvD;YACD,MAAM,EAAE;gBACN,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,kCAAkC,EAAE;gBACjE,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,4CAA4C,EAAE;aAC3E;SACF,CAAC;QACF,iBAAY,GAAW,EAAE,CAAC;QAOxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,MAAM,EAAE,IAAI,0DAAW,CACrB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CACnE;YACD,QAAQ,EAAE,IAAI,0DAAW,CACvB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CACnE;YACD,OAAO,EAAE,IAAI,0DAAW,CACtB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC,CAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAC3C;YACD,OAAO,EAAE,IAAI,0DAAW,CACtB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC,CAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAC3C;YACD,KAAK,EAAE,IAAI,0DAAW,CACpB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC;gBACjB,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,OAAO,CAAC,iDAAiD,CAAC;aACtE,CAAC,CACH;YACD,QAAQ,EAAE,IAAI,0DAAW,CACvB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CACnE;YACD,MAAM,EAAE,IAAI,0DAAW,CACrB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC,CAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAC3C;YACD,QAAQ,EAAE,IAAI,0DAAW,CACvB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAC1C;YACD,IAAI,EAAE,IAAI,0DAAW,CACnB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAC1C;YACD,QAAQ,EAAE,IAAI,0DAAW,CACvB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAC1C;YACD,KAAK,EAAE,IAAI,0DAAW,CACpB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC,CAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAC3C;YACD,MAAM,EAAC,IAAI,0DAAW,CACpB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAC1E;SACF,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IACR,CAAC;IAED,QAAQ,CAAC,QAAQ;QACf,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAE,EAAE;YAC/C,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,SAAS;QACP,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;CAEF;;YAzIQ,0DAAW;YAEX,kFAAmB;YADnB,4DAAa;;AAQT,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,gFAAmC;;KAEpC,CAAC;GACW,YAAY,CAgIxB;AAhIwB;;;;;;;;;;;;;ACVzB;AAAe,qEAAM,eAAe,uBAAuB,GAAG,eAAe,uBAAuB,GAAG,QAAQ,mBAAmB,GAAG,gCAAgC,8BAA8B,GAAG,gBAAgB,mBAAmB,GAAG,6CAA6C,2tBAA2tB,E;;;;;;;;;;;;;;;;;;;;;;ACA38B;AACM;AACmB;AAErB;AAEyB;AAEvB;IAYlC,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAV9B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,kEAAmB;YACnB,kFAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,2DAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH","file":"register-register-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title text-center>Registrate</ion-title>\\n    <ion-buttons>\\n      <ion-button (click)=\\\"goToLogin()\\\">\\n        Atrás\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"logo-publibike-in\\\">\\n    <img src=\\\"assets/img/logo-ekobike.png\\\">\\n  </div>\\n  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register(registerForm.value)\\\">\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Nombre</ion-label>\\n      <ion-input formControlName=\\\"nombre\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.nombre\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('nombre').hasError(validation.type) &&\\n            (registerForm.get('nombre').dirty ||\\n              registerForm.get('nombre').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Apellido</ion-label>\\n      <ion-input formControlName=\\\"apellido\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.apellido\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('apellido').hasError(validation.type) &&\\n            (registerForm.get('apellido').dirty ||\\n              registerForm.get('apellido').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Número de Identificación</ion-label>\\n      <ion-input formControlName=\\\"usuario\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.usuario\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('usuario').hasError(validation.type) &&\\n            (registerForm.get('usuario').dirty ||\\n              registerForm.get('usuario').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Número Celular</ion-label>\\n      <ion-input formControlName=\\\"celular\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.celular\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('celular').hasError(validation.type) &&\\n            (registerForm.get('celular').dirty ||\\n              registerForm.get('celular').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Correo </ion-label>\\n      <ion-input formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('email').hasError(validation.type) &&\\n            (registerForm.get('email').dirty ||\\n              registerForm.get('email').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n        <div *ngIf=\\\"\\n                registerForm.get('password').hasError(validation.type) &&\\n                (registerForm.get('password').dirty ||\\n                  registerForm.get('password').touched)\\n              \\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Género</ion-label>\\n      <ion-select formControlName=\\\"genero\\\" placeholder=\\\"Seleccione\\\">\\n        <ion-select-option value=\\\"Masculino\\\">Masculino</ion-select-option>\\n        <ion-select-option value=\\\"Femenino\\\">Femenino</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.genero\\\">\\n        <div *ngIf=\\\"\\n                registerForm.get('genero').hasError(validation.type) &&\\n                (registerForm.get('genero').dirty ||\\n                  registerForm.get('genero').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Estatura(cm)</ion-label>\\n      <ion-input formControlName=\\\"estatura\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.estatura\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('estatura').hasError(validation.type) &&\\n            (registerForm.get('estatura').dirty ||\\n              registerForm.get('estatura').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Peso (kg)</ion-label>\\n      <ion-input formControlName=\\\"peso\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.peso\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('peso').hasError(validation.type) &&\\n            (registerForm.get('peso').dirty ||\\n              registerForm.get('peso').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Vehiculo</ion-label>\\n      <ion-select formControlName=\\\"vehiculo\\\" placeholder=\\\"Seleccione\\\">\\n        <ion-select-option value=\\\"Bicicleta\\\">Bicicleta</ion-select-option>\\n        <ion-select-option value=\\\"Bicicleta_motorizada\\\">Bicicleta motorizada</ion-select-option>\\n        <ion-select-option value=\\\"Patineta_electrica\\\">Patineta Eléctrica</ion-select-option>\\n        <ion-select-option value=\\\"Patineta_electrica\\\">Moto Eléctrica</ion-select-option>\\n        <ion-select-option value=\\\"Patineta_electrica\\\">Carro Eléctrico</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.vehiculo\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('vehiculo').hasError(validation.type) &&\\n            (registerForm.get('vehiculo').dirty ||\\n              registerForm.get('vehiculo').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Selecciona tu Banco</ion-label>\\n      <ion-select formControlName=\\\"banco\\\" placeholder=\\\"Seleccione\\\">\\n        <ion-select-option value=\\\"Bancamia S.A.\\\">Bancamia S.A.</ion-select-option>\\n        <ion-select-option value=\\\"Banco Agrario\\\">Banco Agrario</ion-select-option>\\n        <ion-select-option value=\\\"Banco Av Villas\\\">Banco Av Villas</ion-select-option>\\n        <ion-select-option value=\\\"Banco BBVA Colombia S.A.\\\">Banco BBVA Colombia S.A.</ion-select-option>\\n        <ion-select-option value=\\\"Banco Caja Social\\\">Banco Caja Social</ion-select-option>\\n        <ion-select-option value=\\\"Bancolombia\\\">Bancolombia</ion-select-option>\\n        <ion-select-option value=\\\"Banco Davivienda\\\">Banco Davivienda</ion-select-option>\\n        <ion-select-option value=\\\"Banco de Bogota\\\">Banco de Bogota</ion-select-option>\\n        <ion-select-option value=\\\"Banco de Occidente\\\">Banco de Occidente</ion-select-option>\\n        <ion-select-option value=\\\"Banco Popular\\\">Banco Popular</ion-select-option>\\n        <ion-select-option value=\\\"Banco Falabella\\\">Banco Falabella</ion-select-option>\\n        <ion-select-option value=\\\"Banco GNB Sudameris\\\">Banco GNB Sudameris</ion-select-option>\\n        <ion-select-option value=\\\"Banco Itau\\\">Banco Itau</ion-select-option>\\n        <ion-select-option value=\\\"Banco Pichincha S.A.\\\">Banco Pichincha S.A.</ion-select-option>\\n        <ion-select-option value=\\\"Bancoomeva S.A.\\\">Bancoomeva S.A.</ion-select-option>\\n        <ion-select-option value=\\\"Citibank\\\">Citibank</ion-select-option>\\n        <ion-select-option value=\\\"Scotiabank Colpatria\\\">Scotiabank Colpatria</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.banco\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('banco').hasError(validation.type) &&\\n            (registerForm.get('banco').dirty ||\\n              registerForm.get('banco').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Cuenta Bancaria</ion-label>\\n      <ion-input formControlName=\\\"cuenta\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.cuenta\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('cuenta').hasError(validation.type) &&\\n            (registerForm.get('cuenta').dirty ||\\n              registerForm.get('cuenta').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    {{ errorMessage }}\\n    <ion-button color=\\\"transparent\\\" full outline class=\\\"ui button go-campaings\\\"  [disabled]=\\\"!registerForm.valid\\\" type=\\\"submit\\\">\\n      REGISTRARME\\n    </ion-button>\\n  </form> \\n</ion-content>\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { AuthenticateService } from '../services/authenticate.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  registerForm: FormGroup;\n  validation_messages = {\n    nombre: [\n      { type: \"required\", message: \"El nombre es requerido.\" },\n      {\n        type: \"minlength\",\n        message: \"El nombre debe tener mínimo tres letras.\"\n      }\n    ],\n    apellido: [\n      { type: \"required\", message: \"El apellido es requerido.\" },\n      {\n        type: \"minlength\",\n        message: \"El apellido debe tener mínimo tres letras.\"\n      }\n    ],\n    usuario: [\n      { type: \"required\", message: \"El número de identificación es requerido\" }\n    ],\n    celular: [\n      { type: \"required\", message: \"El número celular es requerido\" }\n    ],\n    email: [\n      { type: \"required\", message: \"El email es requerido\" },\n      { type: \"pattern\", message: \"Ingresa un email válido.\" }\n    ],\n    password: [\n      { type: \"required\", message: \"La contraseña es obligatoria.\" },\n      {\n        type: \"minlength\",\n        message: \"La contraseña debe tener al menos 5 caracteres.\"\n      }\n    ],    \n    genero: [\n      { type: \"required\", message: \"El número celular es requerido\" }\n    ],\n    estatura: [\n      { type: \"required\", message: \"La estatura es requerida\" }\n    ],\n    peso: [\n      { type: \"required\", message: \"El peso es requerido\" }\n    ],\n    vehiculo: [\n      { type: \"required\", message: \"El vehiculo a usar es requerido\" }\n    ],\n    banco: [\n      { type: \"required\", message: \"El banco es requerido\" }\n    ],\n    cuenta: [\n      { type: \"required\", message: \"El número de cuenta es necesario\" },\n      { type: \"pattern\", message: \"Ingresa la cuenta sin guiones solo números\" }\n    ]\n  };\n  errorMessage: string = \"\";\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthenticateService,\n    private navCtrl: NavController\n  ) {\n    this.registerForm = this.formBuilder.group({      \n      nombre: new FormControl(\n        \"\",\n        Validators.compose([Validators.minLength(3), Validators.required])\n      ),\n      apellido: new FormControl(\n        \"\",\n        Validators.compose([Validators.minLength(3), Validators.required])\n      ),\n      usuario: new FormControl(\n        \"\",\n        Validators.compose([ Validators.required])\n      ),\n      celular: new FormControl(\n        \"\",\n        Validators.compose([ Validators.required])\n      ),\n      email: new FormControl(\n        \"\",\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\")\n        ])\n      ),\n      password: new FormControl(\n        \"\",\n        Validators.compose([Validators.required, Validators.minLength(5)])\n      ),\n      genero: new FormControl(\n        \"\",\n        Validators.compose([ Validators.required])\n      ),\n      estatura: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      peso: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      vehiculo: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      banco: new FormControl(\n        \"\",\n        Validators.compose([ Validators.required])\n      ),\n      cuenta:new FormControl(\n        \"\",\n        Validators.compose([Validators.pattern(\"^[0-9]*$\"), Validators.required])\n      ),\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  register(userData){\n    this.authService.registerUser(userData).then(()=>{\n      this.navCtrl.navigateBack(\"/login\");\n    });\n  }\n  goToLogin(){\n    this.navCtrl.navigateBack(\"/login\");\n  }\n\n}\n","export default \"img {\\n  width: 30%;\\n  text-align: center;\\n}\\n\\nion-title {\\n  text-align: center;\\n}\\n\\nh2 {\\n  color: #01d9ad;\\n}\\n\\nh4,\\nion-label,\\nion-input {\\n  color: #606060 !important;\\n}\\n\\nion-button {\\n  color: #01d9ad;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksVUFBQTtFQUNBLGtCQUFBO0FBQ0o7O0FBRUE7RUFDSSxrQkFBQTtBQUNKOztBQUNBO0VBQ0ksY0FBQTtBQUVKOztBQUFBOzs7RUFHSSx5QkFBQTtBQUdKOztBQURBO0VBQ0ksY0FBQTtBQUlKIiwiZmlsZSI6InNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW1nIHtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbmlvbi10aXRsZSB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuaDIge1xyXG4gICAgY29sb3I6ICMwMWQ5YWQ7XHJcbn1cclxuaDQsXHJcbmlvbi1sYWJlbCxcclxuaW9uLWlucHV0IHtcclxuICAgIGNvbG9yOiAjNjA2MDYwICFpbXBvcnRhbnQ7XHJcbn1cclxuaW9uLWJ1dHRvbiB7XHJcbiAgICBjb2xvcjogIzAxZDlhZDtcclxufVxyXG4iXX0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n"],"sourceRoot":"webpack:///"}