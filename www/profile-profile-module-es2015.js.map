{"version":3,"sources":["./src/app/profile/profile.module.ts","./src/app/profile/profile.page.ts","./src/app/profile/profile.page.html","./src/app/profile/profile-routing.module.ts","./src/app/profile/profile.page.scss"],"names":[],"mappings":"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","file":"profile-profile-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    ProfilePageRoutingModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AlertController, NavController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { ApiPublibikeMarcaService } from '../services/api-publibike-marca.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage {\n \n\n\n  user: {nombre: String,email:String} = {nombre:\"\",email:\"\"};\n  updaterForm: FormGroup;\n  validation_messages = {\n    nombre: [\n      { type: \"required\", message: \"El nombre es requerido.\" },\n      {\n        type: \"minlength\",\n        message: \"El nombre debe tener mínimo tres letras.\"\n      }\n    ],\n    apellido: [\n      { type: \"required\", message: \"El apellido es requerido.\" },\n      {\n        type: \"minlength\",\n        message: \"El apellido debe tener mínimo tres letras.\"\n      }\n    ],\n    celular: [\n      { type: \"required\", message: \"El número celular es requerido\" }\n    ],\n    email: [\n      { type: \"required\", message: \"El email es requerido\" },\n      { type: \"pattern\", message: \"Ingresa un email válido.\" }\n    ],\n    genero: [\n      { type: \"required\", message: \"El número celular es requerido\" }\n    ],\n    estatura: [\n      { type: \"required\", message: \"La estatura es requerida\" }\n    ],\n    peso: [\n      { type: \"required\", message: \"El peso es requerido\" }\n    ],\n    vehiculo: [\n      { type: \"required\", message: \"El vehiculo a usar es requerido\" }\n    ],\n    banco: [\n      { type: \"required\", message: \"El banco es requerido\" }\n    ],\n    cuenta: [\n      { type: \"required\", message: \"El número de cuenta es necesario\" },\n      { type: \"pattern\", message: \"Ingresa la cuenta sin guiones solo números\" }\n    ]\n  };\n  errorMessage: string = \"\";\n\n  constructor(\n    private storage: Storage,\n    private formBuilder: FormBuilder,\n    private apiService: ApiPublibikeMarcaService,\n    public alertController: AlertController,\n    private navCtrl: NavController,\n\n  ) {\n    this.updaterForm = this.formBuilder.group({\n      nombre: new FormControl(\n        \"\",\n        Validators.compose([Validators.minLength(3), Validators.required])\n      ),\n      apellido: new FormControl(\n        \"\",\n        Validators.compose([Validators.minLength(3), Validators.required])\n      ),\n      celular: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      email: new FormControl(\n        \"\",\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\")\n        ])\n      ),\n      genero: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      estatura: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      peso: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      vehiculo: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      banco: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      cuenta: new FormControl(\n        \"\",\n        Validators.compose([Validators.pattern(\"^[0-9]*$\"), Validators.required])\n      ),\n    });\n\n  }\n\n  async ionViewDidEnter() {\n    this.user = await this.storage.get(\"userData\");\n    this.updaterForm.patchValue(this.user)\n\n  }\n  update(userData) {\n    this.apiService.updateUser(userData).then(async () => {\n      console.log(\"Datos actualizados\")\n      const alert = await this.alertController.create({\n        cssClass: 'my-custom-class',\n        header: 'Atención',\n        message: 'Datos actualizados correctamente',\n        buttons: [{\n          text: 'Ok',\n          handler: () => {\n            this.navCtrl.navigateForward(\"menu/home\");\n          }\n        }]\n      });\n      await alert.present();\n    });\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot>\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <div class=\\\"logo-publibike-in\\\">\\n    <img src=\\\"assets/img/logo-ekobike.png\\\">\\n  </div>\\n  <div text-center class=\\\"profile-photo\\\">\\n    <ul style=\\\"list-style:none\\\">\\n      <!-- <li>\\n        <hr>\\n      </li>\\n      <li class=\\\"content-photo\\\"><img src=\\\"assets/img/logo-ekobike.png\\\"></li>\\n      <li>\\n        <hr>\\n      </li> -->\\n      <li>\\n        <h2>{{user.nombre}} {{user.apellido}}</h2>\\n        <h4>{{user.email}}</h4>\\n      </li>\\n    </ul>\\n  </div>\\n  <h2 class=\\\"PaddingSpecial\\\">Tus Datos</h2>\\n  <form [formGroup]=\\\"updaterForm\\\" (ngSubmit)=\\\"update(updaterForm.value)\\\">\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Nombre</ion-label>\\n      <ion-input formControlName=\\\"nombre\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.nombre\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('nombre').hasError(validation.type) &&\\n            (updaterForm.get('nombre').dirty ||\\n              updaterForm.get('nombre').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Apellido</ion-label>\\n      <ion-input formControlName=\\\"apellido\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.apellido\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('apellido').hasError(validation.type) &&\\n            (updaterForm.get('apellido').dirty ||\\n              updaterForm.get('apellido').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Celular</ion-label>\\n      <ion-input formControlName=\\\"celular\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.celular\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('celular').hasError(validation.type) &&\\n            (updaterForm.get('celular').dirty ||\\n              updaterForm.get('celular').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Correo Electrónico</ion-label>\\n      <ion-input formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('email').hasError(validation.type) &&\\n            (updaterForm.get('email').dirty ||\\n              updaterForm.get('email').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Ingresa tu Género</ion-label>\\n      <ion-select formControlName=\\\"genero\\\" placeholder=\\\"Seleccione\\\">\\n        <ion-select-option value=\\\"Masculino\\\">Masculino</ion-select-option>\\n        <ion-select-option value=\\\"Femenino\\\">Femenino</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.genero\\\">\\n        <div *ngIf=\\\"\\n                updaterForm.get('genero').hasError(validation.type) &&\\n                (updaterForm.get('genero').dirty ||\\n                  updaterForm.get('genero').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Estatura(cm)</ion-label>\\n      <ion-input formControlName=\\\"estatura\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.estatura\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('estatura').hasError(validation.type) &&\\n            (updaterForm.get('estatura').dirty ||\\n              updaterForm.get('estatura').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Peso (kg)</ion-label>\\n      <ion-input formControlName=\\\"peso\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.peso\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('peso').hasError(validation.type) &&\\n            (updaterForm.get('peso').dirty ||\\n              updaterForm.get('peso').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Vehiculo</ion-label>\\n      <ion-select formControlName=\\\"vehiculo\\\" placeholder=\\\"Seleccione\\\">\\n        <ion-select-option value=\\\"Bicicleta\\\">Bicicleta</ion-select-option>\\n        <ion-select-option value=\\\"Bicicleta_motorizada\\\">Bicicleta motorizada</ion-select-option>\\n        <ion-select-option value=\\\"Patineta_electrica\\\">Patineta Eléctrica</ion-select-option>\\n        <ion-select-option value=\\\"Patineta_electrica\\\">Moto Eléctrica</ion-select-option>\\n        <ion-select-option value=\\\"Patineta_electrica\\\">Carro Eléctrico</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.vehiculo\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('vehiculo').hasError(validation.type) &&\\n            (updaterForm.get('vehiculo').dirty ||\\n              updaterForm.get('vehiculo').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <h2 class=\\\"PaddingSpecial\\\">Tus Datos Bancarios</h2>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Banco</ion-label>\\n      <ion-select formControlName=\\\"banco\\\" placeholder=\\\"Seleccione\\\">\\n        <ion-select-option value=\\\"Bancamia S.A.\\\">Bancamia S.A.</ion-select-option>\\n        <ion-select-option value=\\\"Banco Agrario\\\">Banco Agrario</ion-select-option>\\n        <ion-select-option value=\\\"Banco Av Villas\\\">Banco Av Villas</ion-select-option>\\n        <ion-select-option value=\\\"Banco BBVA Colombia S.A.\\\">Banco BBVA Colombia S.A.</ion-select-option>\\n        <ion-select-option value=\\\"Banco Caja Social\\\">Banco Caja Social</ion-select-option>\\n        <ion-select-option value=\\\"Bancolombia\\\">Bancolombia</ion-select-option>\\n        <ion-select-option value=\\\"Banco Davivienda\\\">Banco Davivienda</ion-select-option>\\n        <ion-select-option value=\\\"Banco de Bogota\\\">Banco de Bogota</ion-select-option>\\n        <ion-select-option value=\\\"Banco de Occidente\\\">Banco de Occidente</ion-select-option>\\n        <ion-select-option value=\\\"Banco Popular\\\">Banco Popular</ion-select-option>\\n        <ion-select-option value=\\\"Banco Falabella\\\">Banco Falabella</ion-select-option>\\n        <ion-select-option value=\\\"Banco GNB Sudameris\\\">Banco GNB Sudameris</ion-select-option>\\n        <ion-select-option value=\\\"Banco Itau\\\">Banco Itau</ion-select-option>\\n        <ion-select-option value=\\\"Banco Pichincha S.A.\\\">Banco Pichincha S.A.</ion-select-option>\\n        <ion-select-option value=\\\"Bancoomeva S.A.\\\">Bancoomeva S.A.</ion-select-option>\\n        <ion-select-option value=\\\"Citibank\\\">Citibank</ion-select-option>\\n        <ion-select-option value=\\\"Scotiabank Colpatria\\\">Scotiabank Colpatria</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.banco\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('banco').hasError(validation.type) &&\\n            (updaterForm.get('banco').dirty ||\\n              updaterForm.get('banco').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Cuenta Bancaria</ion-label>\\n      <ion-input formControlName=\\\"cuenta\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.cuenta\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('cuenta').hasError(validation.type) &&\\n            (updaterForm.get('cuenta').dirty ||\\n              updaterForm.get('cuenta').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    {{ errorMessage }}\\n    <!-- <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Mis Ingresos</ion-label>\\n      <ion-input formControlName=\\\"ingresos\\\"></ion-input>\\n    </ion-item> -->\\n    <ion-button color=\\\"transparent\\\" full outline class=\\\"ui button go-campaings\\\" [disabled]=\\\"!updaterForm.valid\\\" type=\\\"submit\\\">\\n      EDITAR PERFIL\\n    </ion-button>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","export default \"h2 {\\n  color: #01D9AD;\\n}\\n\\nh4, ion-label, ion-input {\\n  color: #606060 !important;\\n}\\n\\n.PaddingSpecial {\\n  margin-left: 10px;\\n}\\n\\n:host(.button-full:not(.button-round)) .button-native {\\n  border-radius: 10px !important;\\n}\\n\\nion-button {\\n  --border-radius: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9wcm9maWxlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQUE7QUFDSjs7QUFDQTtFQUNJLHlCQUFBO0FBRUo7O0FBQUE7RUFDSSxpQkFBQTtBQUdKOztBQURBO0VBQ0ksOEJBQUE7QUFJSjs7QUFGQTtFQUNJLHFCQUFBO0FBS0oiLCJmaWxlIjoic3JjL2FwcC9wcm9maWxlL3Byb2ZpbGUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDJ7XHJcbiAgICBjb2xvcjogIzAxRDlBRDtcclxufVxyXG5oNCwgaW9uLWxhYmVsLCBpb24taW5wdXQge1xyXG4gICAgY29sb3I6IzYwNjA2MCFpbXBvcnRhbnQ7XHJcbn1cclxuLlBhZGRpbmdTcGVjaWFse1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbn1cclxuOmhvc3QoLmJ1dHRvbi1mdWxsOm5vdCguYnV0dG9uLXJvdW5kKSkgLmJ1dHRvbi1uYXRpdmUge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweCFpbXBvcnRhbnQ7XHJcbn1cclxuaW9uLWJ1dHRvbntcclxuICAgIC0tYm9yZGVyLXJhZGl1czogMzBweDtcclxufSJdfQ== */\";"],"sourceRoot":"webpack:///"}