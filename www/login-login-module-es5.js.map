{"version":3,"sources":["webpack:///src/app/login/login.page.ts","webpack:///src/app/login/login.page.html","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.page.scss"],"names":["LoginPage","formBuilder","authServices","navCtrl","loadingCtrl","storage","validation_messages","email","type","message","password","errorMessage","loginForm","group","compose","required","pattern","minLength","create","cssClass","loading","present","credentials","presentLoading","loginUser","then","res","set","dismiss","navigateForward","err","console","log","name","selector","template","LoginPageModule","imports","declarations","routes","path","component","LoginPageRoutingModule","forChild","exports"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { LoadingController, NavController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { AuthenticateService } from '../services/authenticate.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  loading: any;\n  loginForm: FormGroup;\n  validation_messages = {\n    email: [\n      { type: \"required\", message: \" El correo es requerido\" },\n      { type: \"pattern\", message: \"Ingrese un correo válido\" }\n    ],\n    password: [\n      { type: \"required\", message: \" El password es requerido\" },\n      { type: \"minlength\", message: \"Minimo 5 letras para el password\" }\n    ]\n  };\n  errorMessage: string = \"\";\n  constructor(\n    private formBuilder: FormBuilder,\n    private authServices: AuthenticateService,\n    private navCtrl: NavController,\n    private loadingCtrl: LoadingController,\n    private storage: Storage) {\n    this.loginForm = this.formBuilder.group({\n      email: new FormControl(\n        \"\",\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\")\n        ])\n      ),\n      password: new FormControl(\n        \"\",\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(5)\n        ])\n      )\n    })\n  }\n\n  ngOnInit() {\n  }\n  async presentLoading() {\n    this.loading = await this.loadingCtrl.create({\n      cssClass: 'my-custom-class',\n      message: 'Cargando...'\n    });\n    await this.loading.present();\n  }\n  loginUser(credentials) {\n    this.presentLoading();\n    this.authServices\n      .loginUser(credentials)\n      .then(async res => {\n        this.errorMessage = \"\";\n        this.storage.set(\"isUserLoggedIn\", true);\n        this.storage.set(\"userId\", res);\n        this.loading.dismiss();\n        this.navCtrl.navigateForward(\"/menu/home\");\n      })\n      .catch(err => {\n        this.loading.dismiss();\n        console.log(\"ERROR\", err.name)\n        console.log(\"Error\", typeof (err.name))\n        if (err.name == 'SyntaxError') {\n          this.errorMessage = \"Correo y/o clave incorrecta\";\n        } else if (err.name === 'TypeError') {\n          console.log(\"HELLO\")\n          this.errorMessage = \"Problemas conectando al servidor\";\n        } else {\n          console.log(\"hola\")\n          this.errorMessage = err;\n        }\n      })\n  }\n  goToRegister() {\n    this.navCtrl.navigateForward(\"/register\")\n  }\n\n}\n","export default \"<ion-content>\\n  <div class=\\\"header-index\\\">\\n    <img class=\\\"img-header\\\" src=\\\"assets/img/background-publibike.jpg\\\">\\n    <!-- <figure text-center>\\n      <img class=\\\"logo-publibike\\\" src=\\\"assets/img/logo-publibike.png\\\">\\n    </figure> -->\\n    <div class=\\\"logo-publibike-in\\\">\\n      <img src=\\\"assets/img/logo-ekobike.png\\\">\\n    </div>\\n  </div>`\\n  <form class=\\\"form-ui\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"loginUser(loginForm.value)\\\">\\n    <ion-item color=\\\"secondary\\\">\\n      <!-- <ion-label color=\\\"primary\\\" >Email</ion-label> -->\\n      <ion-input color=\\\"tertiary\\\" formControlName=\\\"email\\\" placeholder=\\\"Correo\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n        <div\\n          *ngIf=\\\"loginForm.get('email').hasError(validation.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\\\">\\n          <p id=\\\"alertUser\\\"> {{validation.message}}</p>\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <!-- <ion-label color=\\\"primary\\\">Password</ion-label> -->\\n      <ion-input color=\\\"tertiary\\\" type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Contraseña\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n        <div\\n          *ngIf=\\\"loginForm.get('password').hasError(validation.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\\\">\\n          <p id=\\\"alertUser\\\"> {{validation.message}}</p>\\n        </div>\\n      </ng-container>\\n    </div>\\n    <p id=\\\"alertUser\\\"> {{errorMessage}}</p>\\n    <ion-button text-center class=\\\"button-login\\\" color=\\\"primary\\\" [disabled]=\\\"!loginForm.valid\\\" type=\\\"Submit\\\">\\n      INICIAR SESIÓN\\n    </ion-button>\\n  </form>\\n  <!-- <ion-footer> -->\\n    <!-- <h4 text-center color=\\\"primary\\\">O Conectate con</h4>\\n    <div class=\\\"login-social\\\">\\n      <img src=\\\"assets/img/facebook-icon-31.png\\\">\\n    </div> -->\\n    \\n  <!-- </ion-footer> -->\\n  <!-- <div class=\\\"main-wrapper\\\">\\n    <div class=\\\"form-login\\\">\\n      <form class=\\\"ui form\\\">\\n        <div class=\\\"field\\\">\\n          <input type=\\\"text\\\" name=\\\"user\\\" placeholder=\\\"Usuario\\\">\\n        </div>\\n        <div class=\\\"field\\\">\\n          <input type=\\\"password\\\" name=\\\"pass\\\" placeholder=\\\"Contraseña\\\">\\n          <a href=\\\"#\\\">¿Olvidaste tu contraseña?</a>\\n        </div>\\n        <div class=\\\"button-login\\\">\\n          <p id=\\\"alertUser\\\"></p>\\n          <a  class=\\\"ui button\\\">INICIAR SESIÓN</a>\\n        </div>\\n      </form>\\n      <h4>O Conectate con</h4>\\n      <div class=\\\"login-social\\\">\\n        <img src=\\\"assets/img/facebook-icon-31.png\\\">\\n      </div>\\n      <div class=\\\"new-user\\\">\\n        <a href=\\\"register.html\\\">¿Eres un usuario nuevo?</a>\\n      </div>\\n    </div>\\n  \\n  </div> -->\\n\\n</ion-content>\\n<ion-footer>\\n  <div class=\\\"new-user\\\">\\n    <ion-button  full outline class=\\\"register\\\" (click)=\\\"goToRegister()\\\" expand=\\\"full\\\">\\n      ¿Eres un usuario nuevo?\\n    </ion-button>\\n  </div>\\n</ion-footer>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\";"]}