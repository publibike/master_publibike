{"version":3,"sources":["webpack:///src/app/register/register-routing.module.ts","webpack:///src/app/register/register.page.html","webpack:///src/app/register/register.page.ts","webpack:///src/app/register/register.page.scss","webpack:///src/app/register/register.module.ts"],"names":["routes","path","component","RegisterPageRoutingModule","imports","forChild","exports","RegisterPage","formBuilder","authService","navCtrl","validation_messages","nombre","type","message","apellido","usuario","celular","email","password","genero","estatura","peso","vehiculo","errorMessage","registerForm","group","compose","minLength","required","pattern","banco","cuenta","userData","console","log","registerUser","then","navigateBack","selector","template","RegisterPageModule","declarations"],"mappings":"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","file":"register-register-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title text-center>Registrate</ion-title>\\n    <ion-buttons>\\n      <ion-button (click)=\\\"goToLogin()\\\">\\n        Atrás\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"logo-publibike-in\\\">\\n    <img src=\\\"assets/img/logo-ekobike.png\\\">\\n  </div>\\n  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register(registerForm.value)\\\">\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Nombre</ion-label>\\n      <ion-input formControlName=\\\"nombre\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.nombre\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('nombre').hasError(validation.type) &&\\n            (registerForm.get('nombre').dirty ||\\n              registerForm.get('nombre').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Apellido</ion-label>\\n      <ion-input formControlName=\\\"apellido\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.apellido\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('apellido').hasError(validation.type) &&\\n            (registerForm.get('apellido').dirty ||\\n              registerForm.get('apellido').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Número de Identificación</ion-label>\\n      <ion-input formControlName=\\\"usuario\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.usuario\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('usuario').hasError(validation.type) &&\\n            (registerForm.get('usuario').dirty ||\\n              registerForm.get('usuario').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Número Celular</ion-label>\\n      <ion-input formControlName=\\\"celular\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.celular\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('celular').hasError(validation.type) &&\\n            (registerForm.get('celular').dirty ||\\n              registerForm.get('celular').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Correo </ion-label>\\n      <ion-input formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('email').hasError(validation.type) &&\\n            (registerForm.get('email').dirty ||\\n              registerForm.get('email').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n        <div *ngIf=\\\"\\n                registerForm.get('password').hasError(validation.type) &&\\n                (registerForm.get('password').dirty ||\\n                  registerForm.get('password').touched)\\n              \\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Género</ion-label>\\n      <ion-select formControlName=\\\"genero\\\" placeholder=\\\"Seleccione\\\">\\n        <ion-select-option value=\\\"Masculino\\\">Masculino</ion-select-option>\\n        <ion-select-option value=\\\"Femenino\\\">Femenino</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.genero\\\">\\n        <div *ngIf=\\\"\\n                registerForm.get('genero').hasError(validation.type) &&\\n                (registerForm.get('genero').dirty ||\\n                  registerForm.get('genero').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Estatura(cm)</ion-label>\\n      <ion-input formControlName=\\\"estatura\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.estatura\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('estatura').hasError(validation.type) &&\\n            (registerForm.get('estatura').dirty ||\\n              registerForm.get('estatura').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Peso (kg)</ion-label>\\n      <ion-input formControlName=\\\"peso\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.peso\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('peso').hasError(validation.type) &&\\n            (registerForm.get('peso').dirty ||\\n              registerForm.get('peso').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Vehiculo</ion-label>\\n      <ion-select formControlName=\\\"vehiculo\\\" placeholder=\\\"Seleccione\\\">\\n        <ion-select-option value=\\\"Bicicleta\\\">Bicicleta</ion-select-option>\\n        <ion-select-option value=\\\"Bicicleta_motorizada\\\">Bicicleta motorizada</ion-select-option>\\n        <ion-select-option value=\\\"Patineta_electrica\\\">Patineta Eléctrica</ion-select-option>\\n        <ion-select-option value=\\\"Patineta_electrica\\\">Moto Eléctrica</ion-select-option>\\n        <ion-select-option value=\\\"Patineta_electrica\\\">Carro Eléctrico</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.vehiculo\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('vehiculo').hasError(validation.type) &&\\n            (registerForm.get('vehiculo').dirty ||\\n              registerForm.get('vehiculo').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Selecciona tu Banco</ion-label>\\n      <ion-select formControlName=\\\"banco\\\" placeholder=\\\"Seleccione\\\">\\n        <ion-select-option value=\\\"Bancamia S.A.\\\">Bancamia S.A.</ion-select-option>\\n        <ion-select-option value=\\\"Banco Agrario\\\">Banco Agrario</ion-select-option>\\n        <ion-select-option value=\\\"Banco Av Villas\\\">Banco Av Villas</ion-select-option>\\n        <ion-select-option value=\\\"Banco BBVA Colombia S.A.\\\">Banco BBVA Colombia S.A.</ion-select-option>\\n        <ion-select-option value=\\\"Banco Caja Social\\\">Banco Caja Social</ion-select-option>\\n        <ion-select-option value=\\\"Bancolombia\\\">Bancolombia</ion-select-option>\\n        <ion-select-option value=\\\"Banco Davivienda\\\">Banco Davivienda</ion-select-option>\\n        <ion-select-option value=\\\"Banco de Bogota\\\">Banco de Bogota</ion-select-option>\\n        <ion-select-option value=\\\"Banco de Occidente\\\">Banco de Occidente</ion-select-option>\\n        <ion-select-option value=\\\"Banco Popular\\\">Banco Popular</ion-select-option>\\n        <ion-select-option value=\\\"Banco Falabella\\\">Banco Falabella</ion-select-option>\\n        <ion-select-option value=\\\"Banco GNB Sudameris\\\">Banco GNB Sudameris</ion-select-option>\\n        <ion-select-option value=\\\"Banco Itau\\\">Banco Itau</ion-select-option>\\n        <ion-select-option value=\\\"Banco Pichincha S.A.\\\">Banco Pichincha S.A.</ion-select-option>\\n        <ion-select-option value=\\\"Bancoomeva S.A.\\\">Bancoomeva S.A.</ion-select-option>\\n        <ion-select-option value=\\\"Citibank\\\">Citibank</ion-select-option>\\n        <ion-select-option value=\\\"Scotiabank Colpatria\\\">Scotiabank Colpatria</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <!--<div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.banco\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('banco').hasError(validation.type) &&\\n            (registerForm.get('banco').dirty ||\\n              registerForm.get('banco').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>-->\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Ingresa tu Cuenta Bancaria</ion-label>\\n      <ion-input formControlName=\\\"cuenta\\\"></ion-input>\\n    </ion-item>\\n\\n    <!-- <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.cuenta\\\">\\n        <div *ngIf=\\\"\\n            registerForm.get('cuenta').hasError(validation.type) &&\\n            (registerForm.get('cuenta').dirty ||\\n              registerForm.get('cuenta').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>-->\\n    {{ errorMessage }}\\n    <ion-button color=\\\"transparent\\\" full outline class=\\\"ui button go-campaings\\\"  [disabled]=\\\"!registerForm.valid\\\" type=\\\"submit\\\">\\n      REGISTRARME\\n    </ion-button>\\n  </form> \\n</ion-content>\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { AuthenticateService } from '../services/authenticate.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  registerForm: FormGroup;\n  validation_messages = {\n    nombre: [\n      { type: \"required\", message: \"El nombre es requerido.\" },\n      {\n        type: \"minlength\",\n        message: \"El nombre debe tener mínimo tres letras.\"\n      }\n    ],\n    apellido: [\n      { type: \"required\", message: \"El apellido es requerido.\" },\n      {\n        type: \"minlength\",\n        message: \"El apellido debe tener mínimo tres letras.\"\n      }\n    ],\n    usuario: [\n      { type: \"required\", message: \"El número de identificación es requerido\" }\n    ],\n    celular: [\n      { type: \"required\", message: \"El número celular es requerido\" }\n    ],\n    email: [\n      { type: \"required\", message: \"El email es requerido\" },\n      { type: \"pattern\", message: \"Ingresa un email válido.\" }\n    ],\n    password: [\n      { type: \"required\", message: \"La contraseña es obligatoria.\" },\n      {\n        type: \"minlength\",\n        message: \"La contraseña debe tener al menos 5 caracteres.\"\n      }\n    ],    \n    genero: [\n      { type: \"required\", message: \"El número celular es requerido\" }\n    ],\n    estatura: [\n      { type: \"required\", message: \"La estatura es requerida\" }\n    ],\n    peso: [\n      { type: \"required\", message: \"El peso es requerido\" }\n    ],\n    vehiculo: [\n      { type: \"required\", message: \"El vehiculo a usar es requerido\" }\n    ],\n    // banco: [\n    //   { type: \"required\", message: \"El banco es requerido\" }\n    // ],\n    // cuenta: [\n    //   // { type: \"required\", message: \"El número de cuenta es necesario\" },\n    //   { type: \"pattern\", message: \"Ingresa la cuenta sin guiones solo números\" }\n    // ]\n  };\n  errorMessage: string = \"\";\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthenticateService,\n    private navCtrl: NavController\n  ) {\n    this.registerForm = this.formBuilder.group({      \n      nombre: new FormControl(\n        \"\",\n        Validators.compose([Validators.minLength(3), Validators.required])\n      ),\n      apellido: new FormControl(\n        \"\",\n        Validators.compose([Validators.minLength(3), Validators.required])\n      ),\n      usuario: new FormControl(\n        \"\",\n        Validators.compose([ Validators.required])\n      ),\n      celular: new FormControl(\n        \"\",\n        Validators.compose([ Validators.required])\n      ),\n      email: new FormControl(\n        \"\",\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\")\n        ])\n      ),\n      password: new FormControl(\n        \"\",\n        Validators.compose([Validators.required, Validators.minLength(5)])\n      ),\n      genero: new FormControl(\n        \"\",\n        Validators.compose([ Validators.required])\n      ),\n      estatura: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      peso: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      vehiculo: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      banco: new FormControl(\n        \"\",\n        // Validators.compose([ Validators.required])\n      ),\n      cuenta:new FormControl(\n        \"\",\n        // Validators.compose([Validators.pattern(\"^[0-9]*$\"), Validators.required])\n      ),\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  register(userData){\n    console.log(userData)\n    this.authService.registerUser(userData).then(()=>{\n      this.navCtrl.navigateBack(\"/login\");\n    });\n  }\n  goToLogin(){\n    this.navCtrl.navigateBack(\"/login\");\n  }\n\n}\n","export default \"img {\\n  width: 30%;\\n  text-align: center;\\n}\\n\\nion-title {\\n  text-align: center;\\n}\\n\\nh2 {\\n  color: #01d9ad;\\n}\\n\\nh4,\\nion-label,\\nion-input {\\n  color: #606060 !important;\\n}\\n\\nion-button {\\n  color: #01d9ad;\\n}\\n\\nion-select {\\n  /* Applies to the value and placeholder color */\\n  color: #000000;\\n  /* Set a different placeholder color */\\n  --placeholder-color: #606060;\\n  /* Set full opacity on the placeholder */\\n  --placeholder-opacity: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksVUFBQTtFQUNBLGtCQUFBO0FBQ0o7O0FBRUE7RUFDSSxrQkFBQTtBQUNKOztBQUNBO0VBQ0ksY0FBQTtBQUVKOztBQUFBOzs7RUFHSSx5QkFBQTtBQUdKOztBQURBO0VBQ0ksY0FBQTtBQUlKOztBQURBO0VBQ0ksK0NBQUE7RUFDQSxjQUFBO0VBRUEsc0NBQUE7RUFDQSw0QkFBQTtFQUVBLHdDQUFBO0VBQ0Esd0JBQUE7QUFFSiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImltZyB7XG4gICAgd2lkdGg6IDMwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbmlvbi10aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuaDIge1xuICAgIGNvbG9yOiAjMDFkOWFkO1xufVxuaDQsXG5pb24tbGFiZWwsXG5pb24taW5wdXQge1xuICAgIGNvbG9yOiAjNjA2MDYwICFpbXBvcnRhbnQ7XG59XG5pb24tYnV0dG9uIHtcbiAgICBjb2xvcjogIzAxZDlhZDtcbn1cblxuaW9uLXNlbGVjdCB7XG4gICAgLyogQXBwbGllcyB0byB0aGUgdmFsdWUgYW5kIHBsYWNlaG9sZGVyIGNvbG9yICovXG4gICAgY29sb3I6ICMwMDAwMDA7XG4gIFxuICAgIC8qIFNldCBhIGRpZmZlcmVudCBwbGFjZWhvbGRlciBjb2xvciAqL1xuICAgIC0tcGxhY2Vob2xkZXItY29sb3I6ICM2MDYwNjA7XG4gIFxuICAgIC8qIFNldCBmdWxsIG9wYWNpdHkgb24gdGhlIHBsYWNlaG9sZGVyICovXG4gICAgLS1wbGFjZWhvbGRlci1vcGFjaXR5OiAxO1xuICB9XG4iXX0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n"]}