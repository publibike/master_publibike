{"version":3,"sources":["webpack:///src/app/profile/profile.module.ts","webpack:///src/app/profile/profile.page.ts","webpack:///src/app/profile/profile.page.html","webpack:///src/app/profile/profile-routing.module.ts","webpack:///src/app/profile/profile.page.scss"],"names":["ProfilePageModule","imports","declarations","ProfilePage","storage","formBuilder","apiService","alertController","modalController","loadingCtrl","userId","_id","user","nombre","apellido","usuario","empresa","reconocimientos","km_total","cal_total","co2_total","tiempo_total","peso","slideOps","initialSlide","slidesPerView","centeredSlides","speed","validation_messages","email","type","message","updateForm","group","compose","required","pattern","presentLoading","get","getUserData","then","res","set","parseFloat","toFixed","patchValue","getUserRecognition","loading","dismiss","console","log","userData","updateUser","create","cssClass","header","buttons","text","alert","present","reconocimiento","getRecognitions","id","recognition","component","componentProps","categoria","data","modal","selector","template","routes","path","ProfilePageRoutingModule","forChild","exports"],"mappings":"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","file":"profile-profile-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    ProfilePageRoutingModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport {\n  AlertController,\n  LoadingController,\n  ModalController,\n} from \"@ionic/angular\";\nimport { Storage } from \"@ionic/storage\";\nimport { RecognitionModalPage } from \"../recognition-modal/recognition-modal.page\";\nimport { ApiPublibikeBienestarService } from \"../services/api-publibike-bienestar.service\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.page.html\",\n  styleUrls: [\"./profile.page.scss\"],\n})\nexport class ProfilePage implements OnInit {\n  loading: any;\n\n  userId: { _id: String } = { _id: \"\" };\n  user: {\n    nombre: String;\n    apellido: String;\n    usuario: String;\n    empresa: {\n      nombre: String;\n    };\n    reconocimientos: any[];\n    km_total: String;\n    cal_total: String;\n    co2_total: String;\n    tiempo_total: String;\n    peso: number;\n  } = {\n    nombre: \"\",\n    apellido: \"\",\n    usuario: \"\",\n    empresa: {\n      nombre: \"\",\n    },\n    reconocimientos: [],\n    km_total: \"0\",\n    cal_total: \"0\",\n    co2_total: \"0\",\n    tiempo_total: \"0\",\n    peso: 0,\n  };\n  reconocimientos: any = [];\n  slideOps = {\n    initialSlide: 2,\n    slidesPerView: 4,\n    centeredSlides: true,\n    speed: 400,\n  };\n  updateForm: FormGroup;\n  validation_messages = {\n    email: [\n      { type: \"required\", message: \"El Correo es requerido\" },\n      { type: \"pattern\", message: \"Ingresa un correo vÃ¡lido\" },\n    ],\n    empresa: {\n      nombre: [{ type: \"requerido\", message: \"La empresa es requerida\" }],\n    },\n  };\n\n  constructor(\n    private storage: Storage,\n    private formBuilder: FormBuilder,\n    private apiService: ApiPublibikeBienestarService,\n    private alertController: AlertController,\n    private modalController: ModalController,\n    private loadingCtrl: LoadingController\n  ) {\n    this.updateForm = this.formBuilder.group({\n      email: new FormControl(\n        \"\",\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\"),\n        ])\n      ),\n      empresa: {\n        nombre: new FormControl(\"\", Validators.compose([Validators.required])),\n      },\n    });\n  }\n  async ionViewDidEnter() {\n    this.presentLoading();\n    this.userId = await this.storage.get(\"userId\");\n\n    // console.log(this.userId)\n    this.apiService.getUserData(this.userId._id).then(async (res) => {\n      this.storage.set(\"userData\", res);\n      // this.user = await this.storage.get(\"userData\");\n      this.user = res;\n      this.user.km_total = parseFloat(res.km_total).toFixed(1);\n      this.user.cal_total = parseFloat(res.cal_total).toFixed(1);\n\n      this.user.co2_total = parseFloat(res.co2_total).toFixed(1);\n      this.user.tiempo_total = parseFloat(res.tiempo_total).toFixed(1);\n\n      this.updateForm.patchValue(this.user);\n    });\n    this.reconocimientos = await this.apiService.getUserRecognition(\n      this.userId._id\n    );\n    this.reconocimientos = this.reconocimientos.reconocimientos;\n    this.loading.dismiss();\n    console.log(this.reconocimientos);\n  }\n  async ionViewWillLeave() {\n    this.presentLoading();\n    this.userId = await this.storage.get(\"userId\");\n\n    // console.log(this.userId)\n    this.apiService.getUserData(this.userId._id).then(async (res) => {\n      console.log(res);\n      this.storage.set(\"userData\", res);\n      this.user = await this.storage.get(\"userData\");\n      console.log(this.user);\n      this.updateForm.patchValue(this.user);\n    });\n    this.reconocimientos = await this.apiService.getUserRecognition(\n      this.userId._id\n    );\n    this.reconocimientos = this.reconocimientos.reconocimientos;\n    this.loading.dismiss();\n    console.log(this.reconocimientos);\n  }\n  update(userData) {\n    console.log('este es el user data', userData)\n    this.apiService.updateUser(userData).then(async () => {\n      console.log(\"Datos actualizados\");\n      const alert = await this.alertController.create({\n        cssClass: \"my-custom-class\",\n        header: \"AtenciÃ³n\",\n        message: \"Datos actualizados correctamente\",\n        buttons: [\n          {\n            text: \"Ok\",\n            // handler: () => {\n            //   this.navCtrl.navigateForward(\"menu/home\");\n            // }\n          },\n        ],\n      });\n      await alert.present();\n    });\n  }\n  async showRecognition(reconocimiento) {\n    const recognition = await this.apiService.getRecognitions(\n      reconocimiento.id\n    );\n    console.log(recognition);\n    const modal = await this.modalController.create({\n      component: RecognitionModalPage,\n      componentProps: {\n        categoria: reconocimiento.categoria,\n        data: recognition,\n      },\n    });\n\n    // modal.onDidDismiss().then(dataRetuned => {\n    //   this.song = dataRetuned.data;\n    // });\n\n    return await modal.present();\n  }\n  async presentLoading() {\n    this.loading = await this.loadingCtrl.create({\n      cssClass: \"my-custom-class\",\n      message: \"Cargando...\",\n    });\n    await this.loading.present();\n  }\n  ngOnInit() {}\n}\n","export default \"\\n<ion-content class=\\\"inside-app\\\" padding>\\n  <div class=\\\"content-profile\\\">\\n    <div class=\\\"profile-photo\\\">\\n      <ul>\\n        <li>\\n          <hr>\\n        </li>\\n        <li class=\\\"content-photo\\\"><img src=\\\"assets/img/logo-ekobike.png\\\"></li>\\n        <li>\\n          <hr>\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"info-profile\\\">\\n      <h2 color=\\\"secondary\\\">{{user.nombre}} </h2>\\n      <h4>Usuario: {{user.usuario}}</h4>\\n      <h4>Empresa: {{user.empresa.nombre}}</h4>\\n      <div class=\\\"data-profile ui two column grid\\\">\\n        <div class=\\\"column\\\">\\n          <form class=\\\"ui form\\\" [formGroup]=\\\"updateForm\\\" (ngSubmit)=\\\"update(updateForm.value)\\\">\\n            <ion-item>\\n              <ion-label color=\\\"secondary\\\">Correo ElectrÃ³nico: </ion-label>\\n              <ion-input formControlName=\\\"email\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-error\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n                <div *ngIf=\\\"\\n                    updateForm.get('email').hasError(validation.type) &&\\n                    (updateForm.get('email').dirty ||\\n                      updateForm.get('email').touched)\\\">\\n                  {{ validation.message }}\\n                </div>\\n              </ng-container>\\n            </div>\\n            <!-- <ion-item>\\n              <ion-label color=\\\"secondary\\\">Empresa</ion-label>\\n              <ion-input formControlName=\\\"empresa.nombre\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"validation-error\\\">\\n              <ng-container *ngFor=\\\"let validation of validation_messages.empresa\\\">\\n                <div *ngIf=\\\"\\n                    updateForm.get('empresa').hasError(validation.type) &&\\n                    (updateForm.get('empresa').dirty ||\\n                      updateForm.get('empresa').touched)\\\">\\n                  {{ validation.message }}\\n                </div>\\n              </ng-container>\\n            </div>     -->\\n            <ion-button color=\\\"transparency\\\" class=\\\"ui right floated button btn-yellow edit-btn\\\" style=\\\"margin-right: 3%;\\\" [disabled]=\\\"!updateForm.valid\\\" type=\\\"submit\\\">Editar Correo</ion-button>        \\n          </form>\\n        </div>\\n      </div>\\n      <div class=\\\"prize-profile\\\">\\n        <h4>\\n          Ãltimo Reconocimientos\\n        </h4>\\n        <div class=\\\"prize-content\\\">\\n          <ion-slides [options]=\\\"slideOps\\\" *ngIf=\\\"reconocimientos.length\\\">\\n            <ion-slide *ngFor=\\\"let reconocimiento of reconocimientos\\\">\\n              <ion-avatar (click)=\\\"showRecognition(reconocimiento)\\\">\\n                <!-- <img [src]=\\\"artist.images[0].url\\\" /> -->\\n                <ion-icon text-center color=\\\"secondary\\\" class=\\\"icon-tools-2\\\"></ion-icon>\\n                <span color=\\\"secondary\\\">{{reconocimiento.categoria}}</span>\\n              </ion-avatar>\\n            </ion-slide>\\n          </ion-slides>\\n          <!-- <ul>\\n            <li>\\n              <i class=\\\"icon-tools-2\\\"></i>\\n              Mantenimiento\\n            </li>\\n            <li>\\n              <i class=\\\"icon-basket\\\"></i>\\n              Mercado\\n            </li>\\n            <li>\\n              <i class=\\\"icon-briefcase\\\"></i>\\n              Viaje\\n            </li>\\n          </ul> -->\\n\\n        </div>\\n      </div>    \\n    </div>\\n    <div class=\\\"content-activity ui two column grid\\\">\\n      <div class=\\\"column\\\">\\n        <h4>\\n          Total de Kilometros Recorridos\\n        </h4>\\n        <div class=\\\"data-activity\\\">\\n          <h3>\\n            {{user.km_total | number}}\\n          </h3>\\n          <h5>Kms</h5>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"column\\\">\\n        <h4>\\n          Total de CalorÃ­as Consumidas\\n        </h4>\\n        <div class=\\\"data-activity\\\">\\n          <h3>\\n            {{user.cal_total | number}}\\n          </h3>\\n          <h5>Kcal</h5>\\n        </div>\\n      </div>\\n      <div class=\\\"column\\\">\\n        <h4>\\n          Total de CO2 Reducido\\n        </h4>\\n        <div class=\\\"data-activity\\\">\\n          <h3>\\n            {{user.co2_total | number}}\\n          </h3>\\n          <h5>Kgr</h5>\\n        </div>\\n      </div>\\n      <div class=\\\"column\\\">\\n        <h4>\\n          Tiempo total de actividad\\n        </h4>\\n        <div class=\\\"data-activity\\\">\\n          <h3>\\n            {{user.tiempo_total | number}}\\n          </h3>\\n          <h5>Mins</h5>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","export default \"ion-avatar {\\n  height: 120px;\\n  width: 90%;\\n}\\n\\nion-avatar img {\\n  width: 90px;\\n  height: 90px;\\n}\\n\\nion-icon {\\n  font-size: 75px;\\n  display: block;\\n  margin-bottom: 10px;\\n}\\n\\nion-avatar span {\\n  font-size: 16px;\\n  color: #ffffff;\\n}\\n\\n.ui form .ui.button {\\n  padding: 0px;\\n}\\n\\nion-content {\\n  --background-image: url('background-ekobike.jpg') no-repeat fixed center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9wcm9maWxlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxVQUFBO0FBQ0Y7O0FBQ0E7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQUVGOztBQUFBO0VBQ0UsZUFBQTtFQUNBLGNBQUE7RUFDQSxtQkFBQTtBQUdGOztBQURBO0VBQ0UsZUFBQTtFQUNBLGNBQUE7QUFJRjs7QUFGQTtFQUNFLFlBQUE7QUFLRjs7QUFIQTtFQUNFLHdFQUFBO0FBTUYiLCJmaWxlIjoic3JjL2FwcC9wcm9maWxlL3Byb2ZpbGUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWF2YXRhciB7XG4gIGhlaWdodDogMTIwcHg7XG4gIHdpZHRoOiA5MCU7XG59XG5pb24tYXZhdGFyIGltZyB7XG4gIHdpZHRoOiA5MHB4O1xuICBoZWlnaHQ6IDkwcHg7XG59XG5pb24taWNvbiB7XG4gIGZvbnQtc2l6ZTogNzVweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5pb24tYXZhdGFyIHNwYW4ge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuLnVpIGZvcm0gLnVpLmJ1dHRvbiB7XG4gIHBhZGRpbmc6IDBweDtcbn1cbmlvbi1jb250ZW50IHtcbiAgLS1iYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi9hc3NldHMvaW1nL2JhY2tncm91bmQtZWtvYmlrZS5qcGdcIikgbm8tcmVwZWF0IGZpeGVkIGNlbnRlcjtcbn1cbiJdfQ== */\";"]}