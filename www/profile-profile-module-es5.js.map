{"version":3,"sources":["webpack:///src/app/profile/profile.module.ts","webpack:///src/app/profile/profile.page.ts","webpack:///src/app/profile/profile.page.html","webpack:///src/app/profile/profile-routing.module.ts","webpack:///src/app/profile/profile.page.scss"],"names":["ProfilePageModule","imports","declarations","ProfilePage","storage","formBuilder","apiService","alertController","navCtrl","user","nombre","email","validation_messages","type","message","apellido","celular","genero","estatura","peso","vehiculo","banco","cuenta","errorMessage","updaterForm","group","compose","minLength","required","pattern","get","patchValue","userData","updateUser","then","console","log","create","cssClass","header","buttons","text","handler","navigateForward","alert","present","selector","template","routes","path","component","ProfilePageRoutingModule","forChild","exports"],"mappings":"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","file":"profile-profile-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    ProfilePageRoutingModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AlertController, NavController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { ApiPublibikeMarcaService } from '../services/api-publibike-marca.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage {\n \n\n\n  user: {nombre: String,email:String} = {nombre:\"\",email:\"\"};\n  updaterForm: FormGroup;\n  validation_messages = {\n    nombre: [\n      { type: \"required\", message: \"El nombre es requerido.\" },\n      {\n        type: \"minlength\",\n        message: \"El nombre debe tener mínimo tres letras.\"\n      }\n    ],\n    apellido: [\n      { type: \"required\", message: \"El apellido es requerido.\" },\n      {\n        type: \"minlength\",\n        message: \"El apellido debe tener mínimo tres letras.\"\n      }\n    ],\n    celular: [\n      { type: \"required\", message: \"El número celular es requerido\" }\n    ],\n    email: [\n      { type: \"required\", message: \"El email es requerido\" },\n      { type: \"pattern\", message: \"Ingresa un email válido.\" }\n    ],\n    genero: [\n      { type: \"required\", message: \"El número celular es requerido\" }\n    ],\n    estatura: [\n      { type: \"required\", message: \"La estatura es requerida\" }\n    ],\n    peso: [\n      { type: \"required\", message: \"El peso es requerido\" }\n    ],\n    vehiculo: [\n      { type: \"required\", message: \"El vehiculo a usar es requerido\" }\n    ],\n    banco: [\n      { type: \"required\", message: \"El banco es requerido\" }\n    ],\n    cuenta: [\n      { type: \"required\", message: \"El número de cuenta es necesario\" },\n      { type: \"pattern\", message: \"Ingresa la cuenta sin guiones solo números\" }\n    ]\n  };\n  errorMessage: string = \"\";\n\n  constructor(\n    private storage: Storage,\n    private formBuilder: FormBuilder,\n    private apiService: ApiPublibikeMarcaService,\n    public alertController: AlertController,\n    private navCtrl: NavController,\n\n  ) {\n    this.updaterForm = this.formBuilder.group({\n      nombre: new FormControl(\n        \"\",\n        Validators.compose([Validators.minLength(3), Validators.required])\n      ),\n      apellido: new FormControl(\n        \"\",\n        Validators.compose([Validators.minLength(3), Validators.required])\n      ),\n      celular: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      email: new FormControl(\n        \"\",\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\")\n        ])\n      ),\n      genero: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      estatura: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      peso: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      vehiculo: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      banco: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      cuenta: new FormControl(\n        \"\",\n        Validators.compose([Validators.pattern(\"^[0-9]*$\"), Validators.required])\n      ),\n    });\n\n  }\n\n  async ionViewDidEnter() {\n    this.user = await this.storage.get(\"userData\");\n    this.updaterForm.patchValue(this.user)\n\n  }\n  update(userData) {\n    this.apiService.updateUser(userData).then(async () => {\n      console.log(\"Datos actualizados\")\n      const alert = await this.alertController.create({\n        cssClass: 'my-custom-class',\n        header: 'Atención',\n        message: 'Datos actualizados correctamente',\n        buttons: [{\n          text: 'Ok',\n          handler: () => {\n            this.navCtrl.navigateForward(\"menu/home\");\n          }\n        }]\n      });\n      await alert.present();\n    });\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot>\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <div class=\\\"logo-publibike-in\\\">\\n    <img src=\\\"assets/img/logo-ekobike.png\\\">\\n  </div>\\n  <div text-center class=\\\"profile-photo\\\">\\n    <ul style=\\\"list-style:none\\\">\\n      <!-- <li>\\n        <hr>\\n      </li>\\n      <li class=\\\"content-photo\\\"><img src=\\\"assets/img/logo-ekobike.png\\\"></li>\\n      <li>\\n        <hr>\\n      </li> -->\\n      <li>\\n        <h2>{{user.nombre}} {{user.apellido}}</h2>\\n        <h4>{{user.email}}</h4>\\n      </li>\\n    </ul>\\n  </div>\\n  <h2 class=\\\"PaddingSpecial\\\">Tus Datos</h2>\\n  <form [formGroup]=\\\"updaterForm\\\" (ngSubmit)=\\\"update(updaterForm.value)\\\">\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Nombre</ion-label>\\n      <ion-input formControlName=\\\"nombre\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.nombre\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('nombre').hasError(validation.type) &&\\n            (updaterForm.get('nombre').dirty ||\\n              updaterForm.get('nombre').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Apellido</ion-label>\\n      <ion-input formControlName=\\\"apellido\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.apellido\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('apellido').hasError(validation.type) &&\\n            (updaterForm.get('apellido').dirty ||\\n              updaterForm.get('apellido').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Celular</ion-label>\\n      <ion-input formControlName=\\\"celular\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.celular\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('celular').hasError(validation.type) &&\\n            (updaterForm.get('celular').dirty ||\\n              updaterForm.get('celular').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Correo Electrónico</ion-label>\\n      <ion-input formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('email').hasError(validation.type) &&\\n            (updaterForm.get('email').dirty ||\\n              updaterForm.get('email').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Ingresa tu Género</ion-label>\\n      <ion-select formControlName=\\\"genero\\\" placeholder=\\\"Seleccione\\\">\\n        <ion-select-option value=\\\"Masculino\\\">Masculino</ion-select-option>\\n        <ion-select-option value=\\\"Femenino\\\">Femenino</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.genero\\\">\\n        <div *ngIf=\\\"\\n                updaterForm.get('genero').hasError(validation.type) &&\\n                (updaterForm.get('genero').dirty ||\\n                  updaterForm.get('genero').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Estatura(cm)</ion-label>\\n      <ion-input formControlName=\\\"estatura\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.estatura\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('estatura').hasError(validation.type) &&\\n            (updaterForm.get('estatura').dirty ||\\n              updaterForm.get('estatura').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Peso (kg)</ion-label>\\n      <ion-input formControlName=\\\"peso\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.peso\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('peso').hasError(validation.type) &&\\n            (updaterForm.get('peso').dirty ||\\n              updaterForm.get('peso').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Vehiculo</ion-label>\\n      <ion-select formControlName=\\\"vehiculo\\\" placeholder=\\\"Seleccione\\\">\\n        <ion-select-option value=\\\"Bicicleta\\\">Bicicleta</ion-select-option>\\n        <ion-select-option value=\\\"Bicicleta_motorizada\\\">Bicicleta motorizada</ion-select-option>\\n        <ion-select-option value=\\\"Patineta_electrica\\\">Patineta Eléctrica</ion-select-option>\\n        <ion-select-option value=\\\"Patineta_electrica\\\">Moto Eléctrica</ion-select-option>\\n        <ion-select-option value=\\\"Patineta_electrica\\\">Carro Eléctrico</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.vehiculo\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('vehiculo').hasError(validation.type) &&\\n            (updaterForm.get('vehiculo').dirty ||\\n              updaterForm.get('vehiculo').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <h2 class=\\\"PaddingSpecial\\\">Tus Datos Bancarios</h2>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Banco</ion-label>\\n      <ion-select formControlName=\\\"banco\\\" placeholder=\\\"Seleccione\\\">\\n        <ion-select-option value=\\\"Bancamia S.A.\\\">Bancamia S.A.</ion-select-option>\\n        <ion-select-option value=\\\"Banco Agrario\\\">Banco Agrario</ion-select-option>\\n        <ion-select-option value=\\\"Banco Av Villas\\\">Banco Av Villas</ion-select-option>\\n        <ion-select-option value=\\\"Banco BBVA Colombia S.A.\\\">Banco BBVA Colombia S.A.</ion-select-option>\\n        <ion-select-option value=\\\"Banco Caja Social\\\">Banco Caja Social</ion-select-option>\\n        <ion-select-option value=\\\"Bancolombia\\\">Bancolombia</ion-select-option>\\n        <ion-select-option value=\\\"Banco Davivienda\\\">Banco Davivienda</ion-select-option>\\n        <ion-select-option value=\\\"Banco de Bogota\\\">Banco de Bogota</ion-select-option>\\n        <ion-select-option value=\\\"Banco de Occidente\\\">Banco de Occidente</ion-select-option>\\n        <ion-select-option value=\\\"Banco Popular\\\">Banco Popular</ion-select-option>\\n        <ion-select-option value=\\\"Banco Falabella\\\">Banco Falabella</ion-select-option>\\n        <ion-select-option value=\\\"Banco GNB Sudameris\\\">Banco GNB Sudameris</ion-select-option>\\n        <ion-select-option value=\\\"Banco Itau\\\">Banco Itau</ion-select-option>\\n        <ion-select-option value=\\\"Banco Pichincha S.A.\\\">Banco Pichincha S.A.</ion-select-option>\\n        <ion-select-option value=\\\"Bancoomeva S.A.\\\">Bancoomeva S.A.</ion-select-option>\\n        <ion-select-option value=\\\"Citibank\\\">Citibank</ion-select-option>\\n        <ion-select-option value=\\\"Scotiabank Colpatria\\\">Scotiabank Colpatria</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.banco\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('banco').hasError(validation.type) &&\\n            (updaterForm.get('banco').dirty ||\\n              updaterForm.get('banco').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item color=\\\"secondary\\\">\\n      <ion-label>Cuenta Bancaria</ion-label>\\n      <ion-input formControlName=\\\"cuenta\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-error\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.cuenta\\\">\\n        <div *ngIf=\\\"\\n            updaterForm.get('cuenta').hasError(validation.type) &&\\n            (updaterForm.get('cuenta').dirty ||\\n              updaterForm.get('cuenta').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    {{ errorMessage }}\\n    <!-- <ion-item color=\\\"secondary\\\">\\n      <ion-label position=\\\"floating\\\">Mis Ingresos</ion-label>\\n      <ion-input formControlName=\\\"ingresos\\\"></ion-input>\\n    </ion-item> -->\\n    <ion-button color=\\\"transparent\\\" full outline class=\\\"ui button go-campaings\\\" [disabled]=\\\"!updaterForm.valid\\\" type=\\\"submit\\\">\\n      EDITAR PERFIL\\n    </ion-button>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","export default \"h2 {\\n  color: #01D9AD;\\n}\\n\\nh4, ion-label, ion-input {\\n  color: #606060 !important;\\n}\\n\\n.PaddingSpecial {\\n  margin-left: 10px;\\n}\\n\\n:host(.button-full:not(.button-round)) .button-native {\\n  border-radius: 10px !important;\\n}\\n\\nion-button {\\n  --border-radius: 30px;\\n}\\n\\nion-select {\\n  /* Applies to the value and placeholder color */\\n  color: #000000;\\n  /* Set a different placeholder color */\\n  --placeholder-color: #606060;\\n  /* Set full opacity on the placeholder */\\n  --placeholder-opacity: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9wcm9maWxlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQUE7QUFDSjs7QUFDQTtFQUNJLHlCQUFBO0FBRUo7O0FBQUE7RUFDSSxpQkFBQTtBQUdKOztBQURBO0VBQ0ksOEJBQUE7QUFJSjs7QUFGQTtFQUNJLHFCQUFBO0FBS0o7O0FBSEE7RUFDSSwrQ0FBQTtFQUNBLGNBQUE7RUFFQSxzQ0FBQTtFQUNBLDRCQUFBO0VBRUEsd0NBQUE7RUFDQSx3QkFBQTtBQUlKIiwiZmlsZSI6InNyYy9hcHAvcHJvZmlsZS9wcm9maWxlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImgye1xyXG4gICAgY29sb3I6ICMwMUQ5QUQ7XHJcbn1cclxuaDQsIGlvbi1sYWJlbCwgaW9uLWlucHV0IHtcclxuICAgIGNvbG9yOiM2MDYwNjAhaW1wb3J0YW50O1xyXG59XHJcbi5QYWRkaW5nU3BlY2lhbHtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG59XHJcbjpob3N0KC5idXR0b24tZnVsbDpub3QoLmJ1dHRvbi1yb3VuZCkpIC5idXR0b24tbmF0aXZlIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHghaW1wb3J0YW50O1xyXG59XHJcbmlvbi1idXR0b257XHJcbiAgICAtLWJvcmRlci1yYWRpdXM6IDMwcHg7XHJcbn1cclxuaW9uLXNlbGVjdCB7XHJcbiAgICAvKiBBcHBsaWVzIHRvIHRoZSB2YWx1ZSBhbmQgcGxhY2Vob2xkZXIgY29sb3IgKi9cclxuICAgIGNvbG9yOiAjMDAwMDAwO1xyXG4gIFxyXG4gICAgLyogU2V0IGEgZGlmZmVyZW50IHBsYWNlaG9sZGVyIGNvbG9yICovXHJcbiAgICAtLXBsYWNlaG9sZGVyLWNvbG9yOiAjNjA2MDYwO1xyXG4gIFxyXG4gICAgLyogU2V0IGZ1bGwgb3BhY2l0eSBvbiB0aGUgcGxhY2Vob2xkZXIgKi9cclxuICAgIC0tcGxhY2Vob2xkZXItb3BhY2l0eTogMTtcclxuICB9XHJcbiJdfQ== */\";"]}