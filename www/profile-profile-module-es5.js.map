{"version":3,"sources":["webpack:///src/app/profile/profile.module.ts","webpack:///src/app/profile/profile.page.ts","webpack:///src/app/profile/profile.page.html","webpack:///src/app/profile/profile-routing.module.ts","webpack:///src/app/profile/profile.page.scss"],"names":["ProfilePageModule","imports","declarations","ProfilePage","storage","formBuilder","apiService","alertController","modalController","loadingCtrl","userId","_id","user","nombre","apellido","usuario","empresa","reconocimientos","km_total","cal_total","co2_total","tiempo_total","peso","slideOps","initialSlide","slidesPerView","centeredSlides","speed","validation_messages","email","type","message","updateForm","group","compose","required","pattern","presentLoading","get","getUserData","then","res","set","parseFloat","toFixed","patchValue","getUserRecognition","loading","dismiss","console","log","userData","updateUser","create","cssClass","header","buttons","text","alert","present","reconocimiento","getRecognitions","id","recognition","component","componentProps","categoria","data","modal","selector","template","routes","path","ProfilePageRoutingModule","forChild","exports"],"mappings":"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","file":"profile-profile-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ProfilePageRoutingModule } from './profile-routing.module';\r\n\r\nimport { ProfilePage } from './profile.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    ProfilePageRoutingModule\r\n  ],\r\n  declarations: [ProfilePage]\r\n})\r\nexport class ProfilePageModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport {\r\n  AlertController,\r\n  LoadingController,\r\n  ModalController,\r\n} from \"@ionic/angular\";\r\nimport { Storage } from \"@ionic/storage\";\r\nimport { RecognitionModalPage } from \"../recognition-modal/recognition-modal.page\";\r\nimport { ApiPublibikeBienestarService } from \"../services/api-publibike-bienestar.service\";\r\n\r\n@Component({\r\n  selector: \"app-profile\",\r\n  templateUrl: \"./profile.page.html\",\r\n  styleUrls: [\"./profile.page.scss\"],\r\n})\r\nexport class ProfilePage implements OnInit {\r\n  loading: any;\r\n\r\n  userId: { _id: String } = { _id: \"\" };\r\n  user: {\r\n    nombre: String;\r\n    apellido: String;\r\n    usuario: String;\r\n    empresa: {\r\n      nombre: String;\r\n    };\r\n    reconocimientos: any[];\r\n    km_total: String;\r\n    cal_total: String;\r\n    co2_total: String;\r\n    tiempo_total: String;\r\n    peso: number;\r\n  } = {\r\n    nombre: \"\",\r\n    apellido: \"\",\r\n    usuario: \"\",\r\n    empresa: {\r\n      nombre: \"\",\r\n    },\r\n    reconocimientos: [],\r\n    km_total: \"0\",\r\n    cal_total: \"0\",\r\n    co2_total: \"0\",\r\n    tiempo_total: \"0\",\r\n    peso: 0,\r\n  };\r\n  reconocimientos: any = [];\r\n  slideOps = {\r\n    initialSlide: 2,\r\n    slidesPerView: 4,\r\n    centeredSlides: true,\r\n    speed: 400,\r\n  };\r\n  updateForm: FormGroup;\r\n  validation_messages = {\r\n    email: [\r\n      { type: \"required\", message: \"El Correo es requerido\" },\r\n      { type: \"pattern\", message: \"Ingresa un correo vÃ¡lido\" },\r\n    ],\r\n    empresa: {\r\n      nombre: [{ type: \"requerido\", message: \"La empresa es requerida\" }],\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private storage: Storage,\r\n    private formBuilder: FormBuilder,\r\n    private apiService: ApiPublibikeBienestarService,\r\n    private alertController: AlertController,\r\n    private modalController: ModalController,\r\n    private loadingCtrl: LoadingController\r\n  ) {\r\n    this.updateForm = this.formBuilder.group({\r\n      email: new FormControl(\r\n        \"\",\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.pattern(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\"),\r\n        ])\r\n      ),\r\n      empresa: {\r\n        nombre: new FormControl(\"\", Validators.compose([Validators.required])),\r\n      },\r\n    });\r\n  }\r\n  async ionViewDidEnter() {\r\n    this.presentLoading();\r\n    this.userId = await this.storage.get(\"userId\");\r\n\r\n    // console.log(this.userId)\r\n    this.apiService.getUserData(this.userId._id).then(async (res) => {\r\n      this.storage.set(\"userData\", res);\r\n      // this.user = await this.storage.get(\"userData\");\r\n      this.user = res;\r\n      this.user.km_total = parseFloat(res.km_total).toFixed(1);\r\n      this.user.cal_total = parseFloat(res.cal_total).toFixed(1);\r\n\r\n      this.user.co2_total = parseFloat(res.co2_total).toFixed(1);\r\n      this.user.tiempo_total = parseFloat(res.tiempo_total).toFixed(1);\r\n\r\n      this.updateForm.patchValue(this.user);\r\n    });\r\n    this.reconocimientos = await this.apiService.getUserRecognition(\r\n      this.userId._id\r\n    );\r\n    this.reconocimientos = this.reconocimientos.reconocimientos;\r\n    this.loading.dismiss();\r\n    console.log(this.reconocimientos);\r\n  }\r\n  async ionViewWillLeave() {\r\n    this.presentLoading();\r\n    this.userId = await this.storage.get(\"userId\");\r\n\r\n    // console.log(this.userId)\r\n    this.apiService.getUserData(this.userId._id).then(async (res) => {\r\n      console.log(res);\r\n      this.storage.set(\"userData\", res);\r\n      this.user = await this.storage.get(\"userData\");\r\n      console.log(this.user);\r\n      this.updateForm.patchValue(this.user);\r\n    });\r\n    this.reconocimientos = await this.apiService.getUserRecognition(\r\n      this.userId._id\r\n    );\r\n    this.reconocimientos = this.reconocimientos.reconocimientos;\r\n    this.loading.dismiss();\r\n    console.log(this.reconocimientos);\r\n  }\r\n  update(userData) {\r\n    console.log('este es el user data', userData)\r\n    this.apiService.updateUser(userData).then(async () => {\r\n      console.log(\"Datos actualizados\");\r\n      const alert = await this.alertController.create({\r\n        cssClass: \"my-custom-class\",\r\n        header: \"AtenciÃ³n\",\r\n        message: \"Datos actualizados correctamente\",\r\n        buttons: [\r\n          {\r\n            text: \"Ok\",\r\n            // handler: () => {\r\n            //   this.navCtrl.navigateForward(\"menu/home\");\r\n            // }\r\n          },\r\n        ],\r\n      });\r\n      await alert.present();\r\n    });\r\n  }\r\n  async showRecognition(reconocimiento) {\r\n    const recognition = await this.apiService.getRecognitions(\r\n      reconocimiento.id\r\n    );\r\n    console.log(recognition);\r\n    const modal = await this.modalController.create({\r\n      component: RecognitionModalPage,\r\n      componentProps: {\r\n        categoria: reconocimiento.categoria,\r\n        data: recognition,\r\n      },\r\n    });\r\n\r\n    // modal.onDidDismiss().then(dataRetuned => {\r\n    //   this.song = dataRetuned.data;\r\n    // });\r\n\r\n    return await modal.present();\r\n  }\r\n  async presentLoading() {\r\n    this.loading = await this.loadingCtrl.create({\r\n      cssClass: \"my-custom-class\",\r\n      message: \"Cargando...\",\r\n    });\r\n    await this.loading.present();\r\n  }\r\n  ngOnInit() {}\r\n}\r\n","export default \"\\r\\n<ion-content class=\\\"inside-app\\\" padding>\\r\\n  <div class=\\\"content-profile\\\">\\r\\n    <div class=\\\"profile-photo\\\">\\r\\n      <ul>\\r\\n        <li>\\r\\n          <hr>\\r\\n        </li>\\r\\n        <li class=\\\"content-photo\\\"><img src=\\\"assets/img/logo-ekobike.png\\\"></li>\\r\\n        <li>\\r\\n          <hr>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"info-profile\\\">\\r\\n      <h2 color=\\\"secondary\\\">{{user.nombre}} </h2>\\r\\n      <h4>Usuario: {{user.usuario}}</h4>\\r\\n      <h4>Empresa: {{user.empresa.nombre}}</h4>\\r\\n      <div class=\\\"data-profile ui two column grid\\\">\\r\\n        <div class=\\\"column\\\">\\r\\n          <form class=\\\"ui form\\\" [formGroup]=\\\"updateForm\\\" (ngSubmit)=\\\"update(updateForm.value)\\\">\\r\\n            <ion-item>\\r\\n              <ion-label color=\\\"secondary\\\">Correo ElectrÃ³nico: </ion-label>\\r\\n              <ion-input formControlName=\\\"email\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-error\\\">\\r\\n              <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\r\\n                <div *ngIf=\\\"\\r\\n                    updateForm.get('email').hasError(validation.type) &&\\r\\n                    (updateForm.get('email').dirty ||\\r\\n                      updateForm.get('email').touched)\\\">\\r\\n                  {{ validation.message }}\\r\\n                </div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n            <!-- <ion-item>\\r\\n              <ion-label color=\\\"secondary\\\">Empresa</ion-label>\\r\\n              <ion-input formControlName=\\\"empresa.nombre\\\"></ion-input>\\r\\n            </ion-item>\\r\\n            <div class=\\\"validation-error\\\">\\r\\n              <ng-container *ngFor=\\\"let validation of validation_messages.empresa\\\">\\r\\n                <div *ngIf=\\\"\\r\\n                    updateForm.get('empresa').hasError(validation.type) &&\\r\\n                    (updateForm.get('empresa').dirty ||\\r\\n                      updateForm.get('empresa').touched)\\\">\\r\\n                  {{ validation.message }}\\r\\n                </div>\\r\\n              </ng-container>\\r\\n            </div>     -->\\r\\n            <ion-button color=\\\"transparency\\\" class=\\\"ui right floated button btn-yellow edit-btn\\\" style=\\\"margin-right: 3%;\\\" [disabled]=\\\"!updateForm.valid\\\" type=\\\"submit\\\">Editar Correo</ion-button>        \\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"prize-profile\\\">\\r\\n        <h4>\\r\\n          Ãltimo Reconocimientos\\r\\n        </h4>\\r\\n        <div class=\\\"prize-content\\\">\\r\\n          <ion-slides [options]=\\\"slideOps\\\" *ngIf=\\\"reconocimientos.length\\\">\\r\\n            <ion-slide *ngFor=\\\"let reconocimiento of reconocimientos\\\">\\r\\n              <ion-avatar (click)=\\\"showRecognition(reconocimiento)\\\">\\r\\n                <!-- <img [src]=\\\"artist.images[0].url\\\" /> -->\\r\\n                <ion-icon text-center color=\\\"secondary\\\" class=\\\"icon-tools-2\\\"></ion-icon>\\r\\n                <span color=\\\"secondary\\\">{{reconocimiento.categoria}}</span>\\r\\n              </ion-avatar>\\r\\n            </ion-slide>\\r\\n          </ion-slides>\\r\\n          <!-- <ul>\\r\\n            <li>\\r\\n              <i class=\\\"icon-tools-2\\\"></i>\\r\\n              Mantenimiento\\r\\n            </li>\\r\\n            <li>\\r\\n              <i class=\\\"icon-basket\\\"></i>\\r\\n              Mercado\\r\\n            </li>\\r\\n            <li>\\r\\n              <i class=\\\"icon-briefcase\\\"></i>\\r\\n              Viaje\\r\\n            </li>\\r\\n          </ul> -->\\r\\n\\r\\n        </div>\\r\\n      </div>    \\r\\n    </div>\\r\\n    <div class=\\\"content-activity ui two column grid\\\">\\r\\n      <div class=\\\"column\\\">\\r\\n        <h4>\\r\\n          Total de Kilometros Recorridos\\r\\n        </h4>\\r\\n        <div class=\\\"data-activity\\\">\\r\\n          <h3>\\r\\n            {{user.km_total | number}}\\r\\n          </h3>\\r\\n          <h5>Kms</h5>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"column\\\">\\r\\n        <h4>\\r\\n          Total de CalorÃ­as Consumidas\\r\\n        </h4>\\r\\n        <div class=\\\"data-activity\\\">\\r\\n          <h3>\\r\\n            {{user.cal_total | number}}\\r\\n          </h3>\\r\\n          <h5>Kcal</h5>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"column\\\">\\r\\n        <h4>\\r\\n          Total de CO2 Reducido\\r\\n        </h4>\\r\\n        <div class=\\\"data-activity\\\">\\r\\n          <h3>\\r\\n            {{user.co2_total | number}}\\r\\n          </h3>\\r\\n          <h5>Kgr</h5>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"column\\\">\\r\\n        <h4>\\r\\n          Tiempo total de actividad\\r\\n        </h4>\\r\\n        <div class=\\\"data-activity\\\">\\r\\n          <h3>\\r\\n            {{user.tiempo_total | number}}\\r\\n          </h3>\\r\\n          <h5>Mins</h5>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProfilePage } from './profile.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProfilePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProfilePageRoutingModule {}\r\n","export default \"ion-avatar {\\n  height: 120px;\\n  width: 90%;\\n}\\n\\nion-avatar img {\\n  width: 90px;\\n  height: 90px;\\n}\\n\\nion-icon {\\n  font-size: 75px;\\n  display: block;\\n  margin-bottom: 10px;\\n}\\n\\nion-avatar span {\\n  font-size: 16px;\\n  color: #ffffff;\\n}\\n\\n.ui form .ui.button {\\n  padding: 0px;\\n}\\n\\nion-content {\\n  --background-image: url('background-ekobike.jpg') no-repeat fixed center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9wcm9maWxlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxVQUFBO0FBQ0Y7O0FBQ0E7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQUVGOztBQUFBO0VBQ0UsZUFBQTtFQUNBLGNBQUE7RUFDQSxtQkFBQTtBQUdGOztBQURBO0VBQ0UsZUFBQTtFQUNBLGNBQUE7QUFJRjs7QUFGQTtFQUNFLFlBQUE7QUFLRjs7QUFIQTtFQUNFLHdFQUFBO0FBTUYiLCJmaWxlIjoic3JjL2FwcC9wcm9maWxlL3Byb2ZpbGUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWF2YXRhciB7XHJcbiAgaGVpZ2h0OiAxMjBweDtcclxuICB3aWR0aDogOTAlO1xyXG59XHJcbmlvbi1hdmF0YXIgaW1nIHtcclxuICB3aWR0aDogOTBweDtcclxuICBoZWlnaHQ6IDkwcHg7XHJcbn1cclxuaW9uLWljb24ge1xyXG4gIGZvbnQtc2l6ZTogNzVweDtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcbmlvbi1hdmF0YXIgc3BhbiB7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIGNvbG9yOiAjZmZmZmZmO1xyXG59XHJcbi51aSBmb3JtIC51aS5idXR0b24ge1xyXG4gIHBhZGRpbmc6IDBweDtcclxufVxyXG5pb24tY29udGVudCB7XHJcbiAgLS1iYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi9hc3NldHMvaW1nL2JhY2tncm91bmQtZWtvYmlrZS5qcGdcIikgbm8tcmVwZWF0IGZpeGVkIGNlbnRlcjtcclxufVxyXG4iXX0= */\";"]}