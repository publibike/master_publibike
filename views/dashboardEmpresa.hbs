<div class="ui two column grid content">
    <div class="column">
        <div class="inside-column">
            <h3>Usuarios Registrados en Empresa</h3>
            <table class="ui very basic table tabla-ekobike">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Usuario</th>
                        <th>Email</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each empresa.usuarios}}

                    <tr>
                        <td>{{this.nombre}}</td>
                        <td><a href="/admin/empresa/usuario/{{this.id}}">{{this.usuario}}</a></td>
                        <td>{{this.email}}</td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
    </div>
    <div class="column">
        <div class="inside-column">
            <h3>Resultados Generales</h3>
            <div style="width:100%;">
                <canvas id="coResultados"></canvas>
            </div>
             {{!-- {{#each empresas}}  --}}
			<div class="top attached ui statistics">
				<div class="data-statistics">
					Kilometros
				</div>
				<div class="ui progress blue graphic-statistics" data-percent="1000">
					<div class="bar" style="transition-duration: 300ms; width: {{empresa.km}}%;">
						<div class="progress">{{empresa.km}}</div>
					</div>
				</div>
                <div class="data-statistics">
					Calorías
				</div>
				<div class="ui progress blue graphic-statistics" data-percent="1000">
					<div class="bar" style="transition-duration: 300ms; width: {{empresa.cal}}%;">
						<div class="progress">{{empresa.cal}}</div>
					</div>
				</div>
                <div class="data-statistics">
					CO2 Reducido
				</div>
				<div class="ui progress blue graphic-statistics" data-percent="1000">
					<div class="bar" style="transition-duration: 300ms; width: {{empresa.co2}}%;">
						<div class="progress">{{empresa.co2}}</div>
					</div>
				</div>
                <div class="data-statistics">
					Tiempo 
				</div>
				<div class="ui progress blue graphic-statistics" data-percent="1000">
					<div class="bar" style="transition-duration: 300ms; width: {{empresa.tiempo}}%;">
						<div class="progress">{{empresa.tiempo}}</div>
					</div>
				</div>
			</div>
			{{!-- {{/each}} --}}
        </div>
    </div>
</div>
<div class="ui one column grid content user-data">
    <div class="column">
        <div class="inside-column">
            <h3>
                Reconocimientos para Usuarios
            </h3>
            <div class="prize-content">
                <ul>
                    {{#each empresa.reconocimientos}}
                    <li>
                        <i class="icon-tools-2"></i>
                        {{this.categoria}}
                    </li>
                    {{/each}}
                </ul>
            </div>
        </div>
    </div>
</div>
<script>

    $('#resultados .menu .item')
        .tab({
            // special keyword works same as above
            context: 'parent'
        })
        ;

    /*GRÁFICA CO2*/
    var MONTHS = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];
    
    var config = {
        type: 'line',
        data: {
            labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
            datasets: [{
                label: 'CO2 Reducido',
                backgroundColor: window.chartColors.green,
                borderColor: window.chartColors.green,
                data: [
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor()
                ],
                fill: false,
            }, {
                label: 'Kilometros Recorridos',
                fill: false,
                backgroundColor: window.chartColors.blue,
                borderColor: window.chartColors.blue,
                data: [
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor()
                ],
            }, {
                label: 'Calorías Reducidas',
                backgroundColor: window.chartColors.red,
                borderColor: window.chartColors.red,
                data: [
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor()
                ],
                fill: false,
            }]
        },
        options: {
            responsive: true,
            title: {
                display: true,
                text: ' '
            },
            tooltips: {
                mode: 'index',
                intersect: false,
            },
            hover: {
                mode: 'nearest',
                intersect: true
            },
            scales: {
                x: {
                    display: true,
                    scaleLabel: {
                        display: true,
                        labelString: 'Month'
                    }
                },
                y: {
                    display: true,
                    scaleLabel: {
                        display: true,
                        labelString: 'Value'
                    }
                }
            }
        }
    };


    window.onload = function () {
        var ctx = document.getElementById('coResultados').getContext('2d');
        window.myLine = new Chart(ctx, config);
    };

    document.getElementById('randomizeData').addEventListener('click', function () {
        config.data.datasets.forEach(function (dataset) {
            dataset.data = dataset.data.map(function () {
                return randomScalingFactor();
            });

        });

        window.myLine.update();
    });

    var colorNames = Object.keys(window.chartColors);
    document.getElementById('addDataset').addEventListener('click', function () {
        var colorName = colorNames[config.data.datasets.length % colorNames.length];
        var newColor = window.chartColors[colorName];
        var newDataset = {
            label: 'Dataset ' + config.data.datasets.length,
            backgroundColor: newColor,
            borderColor: newColor,
            data: [],
            fill: false
        };

        for (var index = 0; index < config.data.labels.length; ++index) {
            newDataset.data.push(randomScalingFactor());
        }

        config.data.datasets.push(newDataset);
        window.myLine.update();
    });

    document.getElementById('addData').addEventListener('click', function () {
        if (config.data.datasets.length > 0) {
            var month = MONTHS[config.data.labels.length % MONTHS.length];
            config.data.labels.push(month);

            config.data.datasets.forEach(function (dataset) {
                dataset.data.push(randomScalingFactor());
            });

            window.myLine.update();
        }
    });

    document.getElementById('removeDataset').addEventListener('click', function () {
        config.data.datasets.splice(0, 1);
        window.myLine.update();
    });

    document.getElementById('removeData').addEventListener('click', function () {
        config.data.labels.splice(-1, 1); // remove the label first

        config.data.datasets.forEach(function (dataset) {
            dataset.data.pop();
        });

        window.myLine.update();
    });

</script>