<div class="ui two column grid content">
    <div class="column">
        <div class="inside-column">
            <h3>Usuarios Registrados en Empresa</h3>
            <table class="ui very basic table tabla-ekobike">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Usuario</th>
                        <th>Email</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each empresa.usuarios}}

                    <tr>
                        <td>{{this.nombre}}</td>
                        <td><a href="/admin/usuario/{{this.id}}">{{this.usuario}}</a></td>
                        <td>{{this.email}}</td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
    </div>
    <div class="column">
        <div class="inside-column">
            <h3>Resultados Generales</h3>
            <input name="dates" />
            <div style="width:100%;">
                <canvas id="coResultados"></canvas>
            </div>
            <div class="top attached ui statistics">
                <div class="data-statistics">
                    Kilometros
                </div>
                <div class="ui progress blue graphic-statistics" data-percent="1000">
                    {{!-- <div class="bar" style="transition-duration: 300ms; width: {{empresa.km}}%;">
                    </div> --}}
                    <div class="progress">{{empresa.km}} Kms</div>
                </div>
                <div class="data-statistics">
                    Calorías
                </div>
                <div class="ui progress blue graphic-statistics" data-percent="1000">
                    {{!-- <div class="bar" style="transition-duration: 300ms; width: {{empresa.cal}}%;">
                    </div> --}}
                    <div class="progress">{{empresa.cal}} Kcal</div>
                </div>
                <div class="data-statistics">
                    CO2 Reducido
                </div>
                <div class="ui progress blue graphic-statistics" data-percent="1000">
                    {{!-- <div class="bar" style="transition-duration: 300ms; width: {{empresa.co2}}%;">
                    </div> --}}
                    <div class="progress">{{empresa.co2}} Kgr</div>
                </div>
                <div class="data-statistics">
                    Tiempo
                </div>
                <div class="ui progress blue graphic-statistics" data-percent="1000">
                    {{!-- <div class="bar" style="transition-duration: 300ms; width: {{empresa.tiempo}}%;">
                    </div> --}}
                    <div class="progress">{{empresa.tiempo}} Minutos</div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="ui one column grid content user-data">
    <div class="column">
        <div class="inside-column">
            <h3>
                Reconocimientos para Usuarios
            </h3>
            <div class="prize-content">
                <ul>
                    {{#each empresa.reconocimientos}}
                    <li>
                        <i class="icon-tools-2"></i>
                        {{this.categoria}}
                    </li>
                    {{/each}}
                </ul>
            </div>
        </div>
    </div>
</div>

<script>
    let hoy = new Date(); //objeto fecha actual
    let diasemhoy = hoy.getDay(); //dia semana actual
    let diahoy = hoy.getDate(); //dia mes actual
    let meshoy = hoy.getMonth(); //mes actual
    let annohoy = hoy.getFullYear(); //año actual
    let emId = "{{empresa._id}}"
    console.log(hoy)
    moment.locale('es')
    hoy = moment(hoy).format("l")
    console.log(typeof (hoy))
    const START_DATE = "01/01/2021";
    const END_DATE = hoy;
    let result;

    $('input[name="dates"]').daterangepicker(
        {
            startDate: START_DATE,
            endDate: END_DATE
        },
        function (start, end) {
            drawChart(start, end, emId);
        }
    );
    

    //Se configuran los datos del ChartJS

    var chartJsDatas = function (resultSet) {
        console.log("resultSetD", resultSet)
        return {
            datasets: [
                {
                    label: "Tiempo",
                    fill: false,
                    backgroundColor: window.chartColors.orange,
                    borderColor: window.chartColors.orange,
                    data: resultSet.datosHistoricos.map(function (r) {
                        return r.min;
                    })
                },
                {
                    label: 'CO2 Reducido',
                    fill: false,
                    backgroundColor: window.chartColors.green,
                    borderColor: window.chartColors.green,
                    data: resultSet.datosHistoricos.map(function (r) {
                        return r.co2;
                    }),
                },
                {
                    label: 'Kilometros Recorridos',
                    fill: false,
                    backgroundColor: window.chartColors.blue,
                    borderColor: window.chartColors.blue,
                    data: resultSet.datosHistoricos.map(function (r) {
                        return r.kms;
                    }),
                },
                {
                    label: 'Calorías Reducidas',
                    backgroundColor: window.chartColors.red,
                    borderColor: window.chartColors.red,
                    data: resultSet.datosHistoricos.map(function (r) {
                        return r.cal;
                    }),
                    fill: false,
                }
            ],
            labels: resultSet.datosHistoricos.map(function (c) {
                c.x = moment(c.fecha).format("l")
                return c.x;
            })
        };
    };

    var options = {
        scales: {
            xAxes: [
                {
                    type: "time",
                    time: {
                        displayFormats: {
                            hour: "MMM DD"
                        },
                        tooltipFormat: "MMM D"
                    }
                }
            ],
            yAxes: [
                {
                    ticks: {
                        beginAtZero: true
                    }
                }
            ]
        }
    };
    var drawChart = function (startDate, endDate, id) {
        console.log(id)
        $.ajax({
            url: `http://${window.location.host}/api/admin/empresa/${id}/estadisticas`,
            success: function (respuesta) {
                let data = chartJsDatas(respuesta);
                if (window.chart) {
                    window.chart.data = data;
                    window.chart.update();
                } else {
                    window.chart = new Chart(document.getElementById("coResultados"), {
                        type: "line",
                        options: options,
                        data: data
                    });
                }
            },
            error: function () {
                console.log("No se ha podido obtener la información");
            }
        });
    };
    
    console.log(window.location.host)

    drawChart(START_DATE, END_DATE, emId);
</script>